name: Node CI

on: push

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 1
    - name: Use Node.js 10
      uses: actions/setup-node@master
      with:
        node-version: 10
    - run: npm install -g yarn yalc codecov
    - name: yarn link
      run: |
        yarn install
        yalc publish
      env:
        CI: true
    - name: yarn install, build, and test
      working-directory: examples/simple
      run: |
        yalc add @zefiros/npm-defaults
        yarn install
        yarn lint
        yarn build
        yarn test
      env:
        CI: true
    - name: coverage
      run: codecov
      env:
        CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
    - name: release
      if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/master'
      run: |
        export GIT_AUTHOR_NAME=Hoid
        export GIT_COMMITTER_NAME=Hoid
        export GIT_AUTHOR_EMAIL=hoid@zefiros.io
        export GIT_COMMITTER_EMAIL=hoid@zefiros.io
        yarn release
        echo '::set-env name=GOPATH::${{ runner.workspace }}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{secrets.NPM_TOKEN}}
    - name: create pull request
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{github.token}}
        script: |
          const require = global.require || global.process.mainModule.constructor._load;
          const { version } = require('./package.json')
          try {
            await github.pulls.create({
              ...context.repo, 
              title: `Publish version ${version}`,
              head: 'development',
              base: 'master',
              draft: true
            })
          } catch (error) {
            const existing = await github.pulls.list({
              ...context.repo,
              state: 'open',
              head: 'Zefiros-Software:development',
              base: 'master'
            })
            console.log(existing)
            if (existing.length > 0) {
              const number = existing[0].number
              await github.pulls.create({
                ...context.repo, 
                title: `Publish version ${version}`,
                pull_number: number
              })
            }
          }